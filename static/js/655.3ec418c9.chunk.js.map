{"version":3,"file":"static/js/655.3ec418c9.chunk.js","mappings":"+QAEaA,EAAMC,EAAAA,GAAAA,IAAH,sVAYHC,EAAYD,EAAAA,GAAAA,IAAH,8PAWTE,EAAQF,EAAAA,GAAAA,GAAH,kGAKLG,EAAWH,EAAAA,GAAAA,GAAH,iG,uKC5BRI,EAAQJ,EAAAA,GAAAA,MAAH,sGAQLK,EAAML,EAAAA,GAAAA,OAAH,wgB,SCMVM,EAAgB,CAClBC,KAAM,GACNC,OAAQ,IAGNC,GAAQT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,+OAYLW,GAAQX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAH,2HAKEa,EAAY,WAErB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAE7BC,QAAQC,IAAIJ,GAgBZ,OACI,SAAC,KAAD,CAAQV,cAAeA,EAAee,SAfrB,SAAEC,EAAF,GAA6B,IAAjBC,EAAgB,EAAhBA,UACjCJ,QAAQC,IAAIE,GAERA,EAAOE,IAAKC,EAAAA,EAAAA,MACZT,EAASU,MAAK,SAAAC,GAAO,OAAIA,EAAQpB,KAAKqB,gBAAkBN,EAAOf,KAAKqB,aAA/C,IACpBC,EAAAA,OAAAA,KAAY,wCAEZf,GAASgB,EAAAA,EAAAA,IAAaR,KAAeC,IAEtCM,EAAAA,OAAAA,QAAe,kBAEpB,EAIK,UACI,UAAClB,EAAD,CAAOoB,aAAa,MAApB,WACI,UAAC3B,EAAD,CAAO4B,QAAQ,OAAf,kBAEI,SAACvB,EAAD,CACAwB,KAAK,OACL1B,KAAK,OACL2B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAIZ,UAAChC,EAAD,CAAO4B,QAAQ,SAAf,oBAEI,SAACvB,EAAD,CACAwB,KAAK,OACL1B,KAAK,SACL2B,QAAQ,yFACRC,MAAM,+FAENC,UAAQ,QAGZ,SAAC/B,EAAD,CAAK4B,KAAK,SAAV,6BAIf,E,oBCjFc,SAASI,IACpB,IAAMvB,GAAWC,EAAAA,EAAAA,MAOjB,OALFuB,EAAAA,EAAAA,YAAU,WACRxB,GAASyB,EAAAA,EAAAA,MACV,GAAC,CAACzB,KAID,SAAC,KAAD,WACE,UAAC,KAAD,YACI,UAAC,KAAD,YAAO,SAAC,MAAD,IAAP,gBAGA,SAACD,EAAD,QAKT,C,gIC3BM,IAAMK,EAAiB,SAAAsB,GAAK,OAAIA,EAAMxB,SAASA,QAAnB,EAEtByB,EAAkB,SAAAD,GAAK,OAAIA,EAAMxB,SAAS0B,SAAnB,EAEvBC,EAAc,SAAAH,GAAK,OAAIA,EAAMxB,SAAS4B,KAAnB,EAGnBC,EAAqB,SAAAL,GAAK,OAAIA,EAAMM,OAAOA,MAAjB,C","sources":["components/App.styled.jsx","components/Form/Form.styled.js","components/Form/Form.js","pages/Phonebook.js","redux/selectors.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Box = styled.div`\n    display=flex;\n    margin-left:20px;\n    margin: 0 auto;\n    padding:5px;\n    border-radius:2px;\n    width: 400px;    \n    box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n    background-image: url(https://img.freepik.com/free-vector/hand-painted-watercolor-pastel-sky-background_23-2148902771.jpg?w=2000)\n   \n`\n\nexport const Container = styled.div`\n        height: '150vh',\n        display: 'flex',\n        \n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 20,\n        color: '#010101',\n                \n`\nexport const Title = styled.h1`\n        display: flex;\n        align-items: center;\n        gap: 10px;\n`\nexport const SubTitle = styled.h2`\n        display: flex;\n        align-items: center;\n        gap: 10px;\n`","import styled from 'styled-components';\n\nexport const Label = styled.label`\ndisplay: flex;\n\nflex-direction: column;\npadding:10px;\npadding-top: 20px;\n`\n\nexport const Btn = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin:0 auto;\n\n    width: 200px;\n    height: 44px;\n\n    font-size: 16px;\n    padding: 10px;\n    border-radius: 22px;\n    border: none;\n    background-color: #BEE1E6;\n    box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n    \n    cursor: pointer;\n    outline: none;\n    \n    &:hover: {\n    background-color: #2EE59D;\n    box-shadow: 0px 15px 20px rgba(46, 229, 157, 0.4);\n    color: #fff;\n    \n    }\n`","import React from 'react';\n//import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContacts } from 'redux/operations';\n\nimport { nanoid } from \"nanoid\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { Formik, Form, Field } from 'formik';\n\nimport styled from 'styled-components';\n\nimport { Label, Btn, } from './Form.styled';\n\n\nconst initialValues = {\n    name: '',\n    number: ''\n};\n\nconst Input = styled(Field)`\nfont-size: 18px;\npadding: 10px 15px;\nmargin: 10px;\nborder: 2px solid #D4E6F1;\nborder-radius: 2px;\n    &:focus{\n        outline:none;\n        border-radius: 6px;\n        box-shadow: 0 0 10px #93caff;\n    }\n`\nconst Forma = styled(Form)`\npadding: 20px;\nborder: 0px solid #7FB3D5;\nbox-shadow: 6px 2px 10px -1px rgba(127, 179, 213, 1);\n`\nexport const FormLabel = () => {\n\n    const dispatch = useDispatch();\n  \n    const contacts = useSelector(selectContacts);\n    \n    console.log(contacts);\n    \n    const handleSubmit = ( values, { resetForm }) => {\n    console.log(values);\n    \n        values.id = nanoid();\n        contacts.find(contact => contact.name.toLowerCase() === values.name.toLowerCase())\n       ? Notify.info('Contacts is already in list-contacts')\n       \n       : dispatch(addContacts( values ))   && resetForm();\n        //dispatch(addContacts( values ));\n        Notify.success('Add new contact'); \n        \n  };\n\n\n    return (\n        <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n            <Forma autoComplete='off'>\n                <Label htmlFor=\"Name\">\n                    Name\n                    <Input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n                </Label>\n                \n                <Label htmlFor=\"Number\">\n                    Number\n                    <Input\n                    type=\"text\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n\n                    required\n                />\n                </Label>\n                <Btn type=\"submit\">Add contact</Btn>\n            </Forma>\n        </Formik>\n    )\n}\n\n// FormLabel.propTypes = {\n//     handleSubmit: PropTypes.func.isRequired,\n    \n// }\n","import { fetchContacts } from 'redux/operations'; \nimport { FormLabel } from 'components/Form/Form'; \nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport { Container, Box,  Title} from 'components/App.styled';\nimport { FcContacts } from 'react-icons/fc';\n\nexport default function Phonebook() {\n    const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(fetchContacts());\n  },[dispatch])\n     \n    \n    return (\n    <Box>\n      <Container >\n          <Title><FcContacts />\n            Phonebook          \n          </Title> \n          <FormLabel/>       \n          \n      </Container>\n    </Box> \n   );\n}","export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\n\nexport const selectStatusFilter = state => state.filter.filter;\n"],"names":["Box","styled","Container","Title","SubTitle","Label","Btn","initialValues","name","number","Input","Field","Forma","Form","FormLabel","dispatch","useDispatch","contacts","useSelector","selectContacts","console","log","onSubmit","values","resetForm","id","nanoid","find","contact","toLowerCase","Notify","addContacts","autoComplete","htmlFor","type","pattern","title","required","Phonebook","useEffect","fetchContacts","state","selectIsLoading","isLoading","selectError","error","selectStatusFilter","filter"],"sourceRoot":""}