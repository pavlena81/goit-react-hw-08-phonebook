{"version":3,"file":"static/js/96.36402387.chunk.js","mappings":"8QAEaA,EAAMC,EAAAA,GAAAA,IAAH,sVAYHC,EAAYD,EAAAA,GAAAA,IAAH,8PAWTE,EAAQF,EAAAA,GAAAA,GAAH,kGAKLG,EAAWH,EAAAA,GAAAA,GAAH,iG,4IC5BRI,EAAQJ,EAAAA,GAAAA,MAAH,qFAKLK,EAAQL,EAAAA,GAAAA,MAAH,gP,SCGLM,EAAS,WAEpB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAO3B,OACE,UAACP,EAAD,oCAEE,SAACC,EAAD,CAEEO,KAAK,OACLC,KAAK,SACLC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,MAAOR,EACPS,SAhBgB,SAACC,GAErBZ,GAASa,EAAAA,EAAAA,GAAgBD,EAAEE,cAAcJ,MAAMK,QAChD,MAkBF,EClCYC,EAAevB,EAAAA,GAAAA,GAAH,iEAMZwB,EAAexB,EAAAA,GAAAA,GAAH,mHAOZyB,EAAMzB,EAAAA,GAAAA,OAAH,wW,oBCJH0B,EAAe,WAC1B,IAAMnB,GAAWC,EAAAA,EAAAA,MACXmB,GAAWjB,EAAAA,EAAAA,IAAYkB,EAAAA,IACvBnB,GAASC,EAAAA,EAAAA,IAAYU,EAAAA,GAGrBS,EAAiBF,EAASlB,QAAO,SAAAqB,GAAO,OAC5CA,EAAQjB,KAAKkB,cAAcC,SAASvB,EAAOwB,QAAQxB,OAAOA,OADd,IAO9C,OAHAyB,QAAQC,IAAIN,GACZK,QAAQC,IAAI1B,EAAOwB,QAAQxB,OAAOA,SAGhC,SAAEc,EAAF,UAEGM,EAAeO,KAAI,SAAAN,GAAO,OACzB,UAACN,EAAD,WACaM,EAAQjB,KADrB,SACiCiB,EAAQO,QAC7B,SAACZ,EAAD,CAAKb,KAAK,SAAS0B,QAAS,kBAAI/B,GAASgC,EAAAA,EAAAA,IAAeT,EAAQU,MAAQC,EAAAA,OAAAA,KAAY,iBAAxD,EAA5B,UAER,SAAC,MAAD,QAJeX,EAAQU,GADF,KAchC,E,wCC1Bc,SAASE,IACpB,IAAMnC,GAAWC,EAAAA,EAAAA,MACbmC,GAAYjC,EAAAA,EAAAA,IAAYkC,EAAAA,IACxBC,GAAQnC,EAAAA,EAAAA,IAAYoC,EAAAA,IAOxB,OALFC,EAAAA,EAAAA,YAAU,WACRxC,GAASyC,EAAAA,EAAAA,MACV,GAAC,CAACzC,KAID,SAAC,KAAD,WACE,UAAC,KAAD,YAEI,UAAC,KAAD,YAAU,SAAC,MAAD,IAAV,eAGA,SAACD,EAAD,KAED,SAACoB,EAAD,IACCiB,IAAcE,IAAS,SAACI,EAAA,EAAD,QAIhC,C,gICvCM,IAAMrB,EAAiB,SAAAsB,GAAK,OAAIA,EAAMvB,SAASA,QAAnB,EAEtBiB,EAAkB,SAAAM,GAAK,OAAIA,EAAMvB,SAASgB,SAAnB,EAEvBG,EAAc,SAAAI,GAAK,OAAIA,EAAMvB,SAASkB,KAAnB,EAGnBlC,EAAqB,SAAAuC,GAAK,OAAIA,EAAMzC,OAAOA,MAAjB,C","sources":["components/App.styled.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.js","pages/Contacts.js","redux/selectors.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Box = styled.div`\n    display=flex;\n    margin-left:20px;\n    margin: 0 auto;\n    padding:5px;\n    border-radius:2px;\n    width: 400px;    \n    box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n    background-image: url(https://img.freepik.com/free-vector/hand-painted-watercolor-pastel-sky-background_23-2148902771.jpg?w=2000)\n   \n`\n\nexport const Container = styled.div`\n        height: '150vh',\n        display: 'flex',\n        \n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 20,\n        color: '#010101',\n                \n`\nexport const Title = styled.h1`\n        display: flex;\n        align-items: center;\n        gap: 10px;\n`\nexport const SubTitle = styled.h2`\n        display: flex;\n        align-items: center;\n        gap: 10px;\n`","import styled from 'styled-components';\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\npadding-top: 20px;\n`\nexport const Input = styled.input`\nfont-size: 18px;\npadding: 10px 15px;\nmargin: 10px;\nborder: 2px solid #D4E6F1;\nborder-radius: 2px;\n     &:focus{\n        outline:none;\n        border-radius: 6px;\n        box-shadow: 0 0 10px #93caff;\n    }\n`","//import PropTypes from 'prop-types';\n\nimport { useDispatch, useSelector} from 'react-redux';\nimport { setStatusFilter } from 'redux/filterSlice';\nimport {selectStatusFilter} from 'redux/selectors';\n \nimport { Label, Input } from './Filter.styled';\n\n\n\nexport const Filter = () => {\n\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);    \n  \n  const filterContact = (e) => {\n\n    dispatch(setStatusFilter(e.currentTarget.value.trim()))\n  }\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        \n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={filter}\n        onChange={filterContact}\n        \n      />\n    </Label>\n  );\n};\n\n// Filter.propTypes = {\n//     filter: PropTypes.string.isRequired,\n//     filterContact: PropTypes.func.isRequired,\n// };","import styled from \"styled-components\";\n\nexport const ListContacts = styled.ul`\ndisplay:flex;\nflex-direction:column;\n\n`\n\nexport const ItemContacts = styled.li`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\npadding: 10px 5px;\n`\n\nexport const Btn = styled.button`\n    font-size: 16px;\n    padding: 10px 15px 10px 15px;\n    border-radius: 50px;\n    border: none;\n    background:#BEE1E6; \n    color: 52, 73, 94;\n    cursor: pointer;\n    outline: none;\n    box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n\n    &:hover: {\n    background-color: 214, 234, 248, 0.5;\n    color: 52, 73, 94;\n    }\n`","//import PropTypes from 'prop-types';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { deleteContacts } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\n\nimport { ListContacts, ItemContacts, Btn } from './Contacts.styled';\nimport { setStatusFilter } from 'redux/filterSlice';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { RiDeleteBinLine} from 'react-icons/ri';\n\nexport const FormContacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(setStatusFilter);\n\n  //const normalizedFilter = filter.toLowerCase();\n  const contactsFilter = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.payload.filter.filter)\n  );\n  \n  console.log(contactsFilter);\n  console.log(filter.payload.filter.filter);\n\n  return (\n    < ListContacts >\n      \n      {contactsFilter.map(contact => (\n        <ItemContacts key={contact.id}>\n                    {contact.name}:     {contact.number}\n                    <Btn type=\"button\" onClick={()=>dispatch(deleteContacts(contact.id)) && Notify.info('Delete contact')}>\n            \n            <RiDeleteBinLine/>\n                    </Btn>\n        </ItemContacts>\n      )\n                 \n        \n      )}\n    </ListContacts>\n  );\n};\n\n\n\n// FormContacts.propTypes = {\n//      contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n   \n// };","import { fetchContacts } from 'redux/operations'; \n\nimport { Filter } from 'components/Filter/Filter'; \nimport { FormContacts } from 'components/Contacts/Contacts';  \n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport { Container, Box, SubTitle} from 'components/App.styled';\n\nimport { FcMultipleSmartphones } from 'react-icons/fc';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport { Loader } from 'components/Loader/Loader'; \n\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  },[dispatch])\n     \n    \n    return (\n    <Box>\n      <Container >     \n                   \n          <SubTitle><FcMultipleSmartphones/>\n            Contacts\n          </SubTitle>\n          <Filter />\n          \n         <FormContacts/>  \n         {isLoading && !error && <Loader/>} \n      </Container>\n    </Box> \n   );\n}","export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\n\nexport const selectStatusFilter = state => state.filter.filter;\n"],"names":["Box","styled","Container","Title","SubTitle","Label","Input","Filter","dispatch","useDispatch","filter","useSelector","selectStatusFilter","type","name","pattern","title","required","value","onChange","e","setStatusFilter","currentTarget","trim","ListContacts","ItemContacts","Btn","FormContacts","contacts","selectContacts","contactsFilter","contact","toLowerCase","includes","payload","console","log","map","number","onClick","deleteContacts","id","Notify","Contacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","Loader","state"],"sourceRoot":""}